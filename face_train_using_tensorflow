import cv2
import tensorflow as tf
import face_recognition
import os
import pickle


def encode_faces(directory):
    known_faces = []
    known_names = []
    for person in os.listdir(directory):
        print(f"Training: {person}")

        person_dir = os.path.join(directory, person)
        if not os.path.isdir(person_dir):
            continue
        for image_name in os.listdir(person_dir):
            image_path = os.path.join(person_dir, image_name)
            image = face_recognition.load_image_file(image_path)
            face_encodings = face_recognition.face_encodings(image)
            if len(face_encodings) > 0:
                known_faces.extend(face_encodings)
                known_names.extend([person] * len(face_encodings))
    return known_faces, known_names


# Path to the directory containing the dataset
dataset_directory = r"C:\Users\abhis\Desktop\The Big Grill\Photo Face Recogntion\Persons"

# Encode faces in the dataset and obtain the face encodings and names
known_faces, known_names = encode_faces(dataset_directory)

# Save the face encodings and corresponding names
with open("known_faces.pkl", "wb") as f:
    pickle.dump(known_faces, f)
with open("known_names.pkl", "wb") as f:
    pickle.dump(known_names, f)

# Utilize TensorFlow GPU for encoding faces
gpus = tf.config.experimental.list_physical_devices('GPU')
if gpus:
    try:
        for gpu in gpus:
            tf.config.experimental.set_memory_growth(gpu, True)
        logical_gpus = tf.config.experimental.list_logical_devices('GPU')
        print(len(gpus), "Physical GPUs,", len(logical_gpus), "Logical GPUs")
    except RuntimeError as e:
        print(e)
